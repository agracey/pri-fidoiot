apiVersion: v1
kind: ConfigMap
metadata:
  name: owner-config
data:
  hibernate.cfg.xml: |
    <?xml version="1.0" encoding="utf-8"?>
    <!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration.dtd">
    <hibernate-configuration>
        <session-factory>
            <property name = "hibernate.connection.driver_class">org.mariadb.jdbc.Driver</property>
            <property name="hibernate.show_sql">true</property>
            <property name="current_session_context_class">thread</property>
            <property name="hbm2ddl.auto">update</property>

            <mapping class="org.fidoalliance.fdo.protocol.entity.CertificateValidity"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.CertificateData"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.OnboardingVoucher"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.OnboardingConfig"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.OnDieCertificateData"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.ProtocolSession"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.ConformanceData"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.SystemResource"></mapping>
            <mapping class="org.fidoalliance.fdo.protocol.entity.SystemPackage"></mapping>
        </session-factory>
    </hibernate-configuration>
  service.yml: |
    hibernate-properties:
      hibernate.connection.username: $(DB_USER)
      hibernate.connection.password: $(DB_PASSWORD)
      hibernate.connection.url: jdbc:mariadb://mariadb:3306/owner?useSSL=false
      hibernate.connection.requireSSL: false
      hibernate.connection.autoReconnect: true
      hibernate.dialect: org.hibernate.dialect.MariaDBDialect

    system-properties:
      log4j.configurationFile: log4j2.xml
      app-data.dir: ./app-data
      application.version: 1.1.5-SNAPSHOT
      server.api.user: $(API_USER)
      server.api.password: "null"
      service.name: "Owner"

    http-server:
      base_path: .
      http_port: 8080
      http_schemes:
      - http
      http_timeout: 20000
    
    to0-scheduler:
      thread-count: 5
      interval: 120

    owner:
      keystore: 
        path: owner.p12
        store-type: PKCS12
        password: encrypt_password.txt
      replacement:
        keystore: 
          path: replacement.p12
          store-type: PKCS12
          password: encrypt_password.txt
      to0-scheduler:
        thread-count: 5
        interval: 120
    
    epid:
      # WARNING: do not set testmode to true in production environments
      # if testmode is true, EPID signature verification will only
      # fail for non-signature issues (i.e. malformed requests)
      testMode: false
      # TBD: the url below is the used for production purposes
      # url: http://verify.epid-sbx.trustedservices.intel.com
      # the url below is used for testing purposes only
      url: http://verify.epid-sbx.trustedservices.intel.com

    #cbor Web Token (cwt) used for to0 and to1 sessions
    cwt:
      keystore: 
        path: ctw.p12
        store-type: PKCS12
        password: $(encrypt_password)

    workers:
      - org.fidoalliance.fdo.protocol.StandardLogProvider
      - org.fidoalliance.fdo.protocol.DebugExceptionConsumer
      - org.fidoalliance.fdo.protocol.StandardMessageDispatcher
      - org.fidoalliance.fdo.protocol.StandardCryptoService
      - org.fidoalliance.fdo.protocol.StandardHttpServer
      - org.fidoalliance.fdo.protocol.StandardDatabaseServer
      - org.fidoalliance.fdo.protocol.StandardOwnerKeySupplier
      - org.fidoalliance.fdo.protocol.StandardCwtKeySupplier
      - org.fidoalliance.fdo.protocol.StandardReplacementKeySupplier
      #- Use StandardHttpClientSupplier for secure Production configurations.
      - org.fidoalliance.fdo.protocol.StandardHttpClientSupplier
      #- org.fidoalliance.fdo.protocol.HttpOwnerSchemeSupplier 
      - org.fidoalliance.fdo.protocol.StandardOwnerSchemeSupplier
      - org.fidoalliance.fdo.protocol.db.StandardServiceInfoClientSupplier
      # Disable BasicServiceInfoClientSupplier in Production Environment to perform SSL certificate verification.
      # Use StandardServiceInfoClientSupplier for secure Production configurations.
      #- org.fidoalliance.fdo.protocol.db.BasicServiceInfoClientSupplier
      - org.fidoalliance.fdo.protocol.db.OnDieCertificateManager
      - org.fidoalliance.fdo.protocol.db.StandardKeyStoreInputStream
      - org.fidoalliance.fdo.protocol.db.StandardKeyStoreOutputStream
      #- org.fidoalliance.fdo.protocol.FileKeyStoreInputStream
      #- org.fidoalliance.fdo.protocol.FileKeyStoreOutputStream
      - org.fidoalliance.fdo.protocol.db.To0Scheduler
      - org.fidoalliance.fdo.protocol.db.StandardSessionCleaner
      - org.fidoalliance.fdo.protocol.db.StandardAcceptOwnerFunction
      - org.fidoalliance.fdo.protocol.db.StandardValidityDaysSupplier
      - org.fidoalliance.fdo.protocol.db.StandardServerSessionManager
      - org.fidoalliance.fdo.protocol.db.StandardExtraInfoSupplier
      - org.fidoalliance.fdo.protocol.db.StandardVoucherQueryFunction
      - org.fidoalliance.fdo.protocol.db.StandardVoucherReplacementFunction
      #- org.fidoalliance.fdo.protocol.db.ReuseVoucherReplacementFunction
      - org.fidoalliance.fdo.protocol.db.StandardReplacementVoucherStorageFunction 
      - org.fidoalliance.fdo.protocol.db.StandardRendezvousWaitSecondsSupplier
      - org.fidoalliance.fdo.protocol.db.StandardOwnerInfoSizeSupplier
      - org.fidoalliance.fdo.protocol.db.ConformanceOwnerModule
      - org.fidoalliance.fdo.protocol.db.FdoSysOwnerModule
  web.xml: |
    <?xml version="1.0" encoding="ISO-8859-1"?>
    <web-app xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
        version="2.5">
    

    <servlet>
        <servlet-name>FdoProtocol</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.ProtocolServlet</servlet-class>
    </servlet>
    <servlet-mapping> 
        <servlet-name>FdoProtocol</servlet-name>
        <url-pattern>/fdo/101/msg/60</url-pattern>
        <url-pattern>/fdo/101/msg/62</url-pattern>
        <url-pattern>/fdo/101/msg/64</url-pattern>
        <url-pattern>/fdo/101/msg/66</url-pattern>
        <url-pattern>/fdo/101/msg/68</url-pattern>
        <url-pattern>/fdo/101/msg/70</url-pattern>
        <url-pattern>/fdo/101/msg/255</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>Redirect</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
        <init-param>
            <param-name>Api-Class</param-name>
            <param-value>org.fidoalliance.fdo.protocol.api.To2Blob</param-value>
        </init-param>
    </servlet>
    <servlet-mapping> 
        <servlet-name>Redirect</servlet-name>
        <url-pattern>/api/v1/owner/redirect</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>To0Starter</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
        <init-param>
            <param-name>Api-Class</param-name>
            <param-value>org.fidoalliance.fdo.protocol.api.To0Starter</param-value>
        </init-param>
    </servlet>
    <servlet-mapping> 
        <servlet-name>To0Starter</servlet-name>
        <url-pattern>/api/v1/to0/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>SviPackage</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
        <init-param>
            <param-name>Api-Class</param-name>
            <param-value>org.fidoalliance.fdo.protocol.api.SviPackage</param-value>
        </init-param>
    </servlet>
    <servlet-mapping> 
        <servlet-name>SviPackage</servlet-name>
        <url-pattern>/api/v1/owner/svi</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>OwnerVoucher</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
        <init-param>
            <param-name>Api-Class</param-name>
            <param-value>org.fidoalliance.fdo.protocol.api.OwnerVoucher</param-value>
        </init-param>
    </servlet>
    <servlet-mapping> 
        <servlet-name>OwnerVoucher</servlet-name>
        <url-pattern>/api/v1/owner/vouchers/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>Logs</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
        <init-param>
            <param-name>Api-Class</param-name>
            <param-value>org.fidoalliance.fdo.protocol.api.Logs</param-value>
        </init-param>
    </servlet>
    <servlet-mapping> 
        <servlet-name>Logs</servlet-name>
        <url-pattern>/api/v1/logs</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>Interop</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
        <init-param>
            <param-name>Api-Class</param-name>
            <param-value>org.fidoalliance.fdo.protocol.api.InteropVoucher</param-value>
        </init-param>
    </servlet>
    <servlet-mapping> 
        <servlet-name>Interop</servlet-name>
        <url-pattern>/api/v1/interop/vouchers/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>OnDie</servlet-name>
        <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
        <init-param>
            <param-name>Api-Class</param-name>
            <param-value>org.fidoalliance.fdo.protocol.api.OnDie</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>OnDie</servlet-name>
        <url-pattern>/api/v1/ondie</url-pattern>
    </servlet-mapping>
    <servlet>
            <servlet-name>OwnerState</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.DeviceStateApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>OwnerState</servlet-name>
            <url-pattern>/api/v1/owner/state/*</url-pattern>
        </servlet-mapping>
    <servlet>
            <servlet-name>SystemResourceAPI</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.SystemResourceApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>SystemResourceAPI</servlet-name>
            <url-pattern>/api/v1/owner/resource/*</url-pattern>
        </servlet-mapping>
    <servlet>
            <servlet-name>CertificateApi</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.CertificateApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>CertificateApi</servlet-name>
            <url-pattern>/api/v1/certificate/*</url-pattern>
        </servlet-mapping>
        <servlet>
            <servlet-name>Health</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.HealthApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>Health</servlet-name>
            <url-pattern>/health</url-pattern>
        </servlet-mapping>
        <servlet>
            <servlet-name>CertificateValidity</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.CertificateValidityApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>CertificateValidity</servlet-name>
            <url-pattern>/api/v1/certificate/validity/*</url-pattern>
        </servlet-mapping>
        <servlet>
            <servlet-name>MessageSizeApi</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.MessageSizeApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>MessageSizeApi</servlet-name>
            <url-pattern>/api/v1/owner/messagesize</url-pattern>
        </servlet-mapping>
        <servlet>
            <servlet-name>ServiceInfoSizeApi</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.SviSizeApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>ServiceInfoSizeApi</servlet-name>
            <url-pattern>/api/v1/owner/svisize</url-pattern>
        </servlet-mapping>
        <servlet>
            <servlet-name>Reseller</servlet-name>
            <servlet-class>org.fidoalliance.fdo.protocol.api.RestApiServlet</servlet-class>
            <init-param>
                <param-name>Api-Class</param-name>
                <param-value>org.fidoalliance.fdo.protocol.api.ResellApi</param-value>
            </init-param>
        </servlet>
        <servlet-mapping>
            <servlet-name>Reseller</servlet-name>
            <url-pattern>/api/v1/resell/*</url-pattern>
        </servlet-mapping>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>apis</web-resource-name>
            <url-pattern>/api/v1/*</url-pattern>
        </web-resource-collection>
        <!--<auth-constraint>
            <role-name>api</role-name>
        </auth-constraint>-->
        <user-data-constraint>
            <!-- <transport-guarantee>CONFIDENTIAL</transport-guarantee> -->
        </user-data-constraint>
    </security-constraint>
    <login-config>
        <auth-method>CLIENT-CERT</auth-method>
    </login-config>
    <security-role>
        <role-name>api</role-name>
    </security-role>
    </web-app>